# ðŸš€ Git Course for Freshers & Interview Preparation

Welcome! ðŸŽ‰  
This repository contains **Git basics for beginners** and **important Git interview questions with answers** for freshers preparing for placements.

---

## ðŸ“˜ Git Basics (For Freshers)

### 1. What is Git and why do we use it?
- Git is a **distributed version control system** used to track changes in source code.  
- It helps teams collaborate, manage versions, and roll back changes if needed.

### 2. Difference between Git and GitHub
- **Git** â†’ Version control tool (installed on your system).  
- **GitHub** â†’ Cloud platform that hosts Git repositories for collaboration.

### 3. Git installation and setup
```bash
# Install Git
sudo apt-get install git       # Linux
brew install git               # macOS
winget install --id Git.Git    # Windows

# Configure Git
git config --global user.name "Your Name"
git config --global user.email "your@email.com"

4. Basic Git commands

git init â†’ Initialize a new repository.

git clone <url> â†’ Copy a remote repo.

git add <file> â†’ Stage file(s).

git commit -m "message" â†’ Save staged changes.

git push â†’ Upload changes to remote repo.

git pull â†’ Download changes from remote.

git status â†’ Show repo status.

git log â†’ Show commit history.

5. Branching and Merging

Create branch â†’ git branch feature1

Switch branch â†’ git checkout feature1

Merge â†’ git merge feature1

6. Resolving Merge Conflicts

Open the conflicted file â†’ fix manually.

Stage the file (git add <file>).

Commit (git commit).

7. Working with Remote Repositories

Add remote: git remote add origin <url>

Push code: git push -u origin main

ðŸŽ¯ Interview Questions (with Answers)
1. What is the difference between Git and SVN?

Git is distributed (every developer has a full copy).

SVN is centralized (requires central server).

Git is faster and better for branching.

2. What is a commit ID in Git?

Each commit has a unique SHA-1 hash (commit ID).

It identifies a specific snapshot of the code.

3. How do you undo the last commit?

Keep changes:

git reset --soft HEAD~1


Remove changes:

git reset --hard HEAD~1

4. What is the difference between git fetch and git pull?

git fetch â†’ Downloads changes but doesnâ€™t merge.

git pull â†’ Downloads and merges changes.

5. How to resolve merge conflicts?

Open conflicted files â†’ manually edit.

Stage files (git add <file>).

Commit (git commit).

6. What is the difference between git reset, git revert, and git checkout?

git reset â†’ Moves HEAD to previous commit (can delete history).

git revert â†’ Creates a new commit that undoes changes.

git checkout â†’ Switches branches or restores files.

7. How do you create and switch to a new branch?
git checkout -b new-branch

8. What is .gitignore file?

A file that tells Git to ignore certain files (logs, build artifacts, secrets, etc.).

9. What is the difference between fork, clone, and branch?

Fork â†’ Copy someone elseâ€™s repo into your GitHub account.

Clone â†’ Copy a repo from GitHub to your local system.

Branch â†’ Create a separate line of development inside a repo.

10. How to squash commits in Git?
git rebase -i HEAD~n


Mark commits as squash â†’ combine into one commit.

ðŸ“‚ Resources

Official Git Documentation

GitHub Guides

InterviewBit Git Questions
